apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
  namespace: observability
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: "8.10.0"
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: observability
      interval: 12h
  values:
    alerting:
      contactpoints.yaml:
        secret:
          apiVersion: 1
          contactPoints:
            - orgId: 1
              name: discord-alerting
              type: discord
              receivers:
                - name: discord
                  discord_configs:
                  - webhook_url: ${SECRET_DISCORD_WEBHOOK_URL}
      templates.yaml:
        apiVersion: 1
        templates:
          - orgId: 1
            name:  basic-discord-template
            template: |
              {{ `
              {{ define "alert_severity_prefix_emoji" }}
                      {{- if ne .Status "firing" -}}
                              :white_check_mark:
                      {{- else if eq .Status "firing" -}}
                              :warning:
                      {{- end -}}
              {{- end -}}

              {{ define "basic-discord-template" -}}
              {{- template "alert_severity_prefix_emoji" . -}}
              [{{- .Status | toUpper -}}]: {{ .CommonLabels.alertname -}}
              {{- end -}}
              ` }}

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default

    dashboards:
      default:
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/nlamirault/monitoring-mixins/refs/heads/master/monitoring-mixins/cert-manager-mixin/dashboards/cert-manager.json
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 19
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 20
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 43
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 42
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 34
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 36
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
        node-feature-discovery:
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
          datasource: Prometheus
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 37
          datasource: Prometheus
        prometheus:
          # renovate: depName="Prometheus"
          gnetId: 19105
          revision: 7
          datasource: Prometheus
        pihole-exporter:
          # renovate: depName="Prometheus"
          gnetId: 10176
          revision: 3
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        label: grafana_dashboard
        labelValue: "1"
        folderAnnotation: grafana_folder
        provider:
          disableDelete: false
          foldersFromFilesStructure: true
          allowUiUpdates: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: "1"
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel

    # configuration to make dashboard configmaps discoverable
    # sidecar:
    #   datasources:
    #     enabled: true
    #     label: grafana_datasource
    #     labelValue: "1"
    #   dashboards:
    #     enabled: true
    #     label: grafana_dashboard
    #     labelValue: "1"
    #     # Allow discovery in all namespaces for dashboards
    #     searchNamespace: ALL
    #     provider:
    #       allowUiUpdates: true

    persistence:
      enabled: true
      type: pvc
      accessModes:
        - ReadWriteOnce
      size: 4Gi

    ingress:
      enabled: true
      ingressClassName: external
      annotations:
        external-dns.alpha.kubernetes.io/target: "metrics.${SECRET_EXTERNAL_DOMAIN}"
      path: /
      pathType: Prefix
      hosts:
        - metrics.${SECRET_EXTERNAL_DOMAIN}
